module top_module(
    input clk,
    input load,
    input [1:0] ena,
    input [99:0] data,
    output reg [99:0] q); 
    
    reg [99:0] q_temp;
    reg q_0;
    reg q_99;
    
    
    always@(posedge clk)
    begin

        if (load == 1)
        begin
            q <= data;
            q_temp <= data;
            q_0 <= data[0];
            q_99 <= data[99];
        end
        else if (ena==2'b01)  // rotates right by one bit
            begin
                q <= {q[0], q[99:1]};
                // q[99] <= q_0;
                //q_0 <= q[0];
                //q_99 <= q[99];
            end
        else if (ena==2'b10)  // rotates left by one bit
            begin
                q <= {q[98:0],q[99]};
                //q[0] <= q_99;
                //q_0 <= q[0];
                //q_99 <= q[99];
            
            end
        else if ((ena==2'b11)|(ena==2'b00))
            begin
                q <= q;
                q_0 <= q[0];
                q_99 <= q[99];
            end

        else
          begin
            q_temp <= q;
            q_0 <= q[0];
            q_99 <= q[99];
          end
            

    end
    
    
    
    
    
    


    
    
endmodule
