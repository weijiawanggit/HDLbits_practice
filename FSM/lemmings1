module top_module(
    input clk,
    input areset,    // Freshly brainwashed Lemmings walk left.
    input bump_left,
    input bump_right,
    output walk_left,
    output walk_right); //  

    
    // declare the two states 
    parameter LEFT=1'b0, RIGHT=1'b1;
    reg state, next_state;

    //always @(*) begin
        // State transition logic
    //end

    always @(posedge clk, posedge areset) begin
        // State flip-flops with asynchronous reset
        if (areset==1)
            begin
                state <= LEFT;
            end
        else
            begin
                case(state)
                    LEFT:
                    begin
                        if (bump_left==1) 
                        	state <= RIGHT;
                        else
                            state <= state;
                        
                    end
                        
                    RIGHT:
                    begin                        
                        
                        if (bump_right==1) 
                        	state <= LEFT;
                        else
                            state <= state;
                        
                    end
                    
                    
                endcase
                
            end
        
        
    end

    // Output logic
    assign walk_left = (state == LEFT);
    assign walk_right = (state == RIGHT);

endmodule
